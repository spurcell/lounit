// since we're JIT, we could actually support statically-checked compilation
// of command line args

main is <-> (args, system, loader) {

    // get the test module from args
    
    // load the test module
/*    testModule = loader.load(testMod);*/
    
    tests is {

        "exit code is zero when all passing" => <-> (test) {
        
            test.assert(true);
        },
        
        "exit code one when there are failures" => <-> (test) {
        
            test.assert(true);
        }
    };
    
    // run the tests
    // should we make it more obvious if something is sync or async?
    // maybe the arrow is only present when async?
    // can we do scan tests >> log; ?
    
    reporter = ::ConsoleReporter.create(system.out);
    
    // BUG when the testprocs were handlers, their calls were automatically attached to the outer task
    // which is NOT what the programmer would intend because they're detached from the flow
        
    scan tests -> (name, testProc) {

        test = ::Test.create(name, testProc);

        // run the test and wait for it
        test.run << (reporter);
    }
    
    // render the test report
    /*report = reporter.render();

    system.out.writeln(report);*/
};